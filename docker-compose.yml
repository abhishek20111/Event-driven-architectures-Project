version: '3.8'

services:
  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "5672:5672"
      - "15672:15672"

  producer-service1:
    build: ./producer-service1
    ports:
      - "3001:3001"
    environment:
      - RABBITMQ_URL=amqp://rabbitmq
    depends_on:
      - rabbitmq

  consumer-service1:
    build: ./consumer-service1
    ports:
      - "4001:4001"
    environment:
      - RABBITMQ_URL=amqp://rabbitmq
      - MONGO_URI=mongodb://mongo:27017
      - REDIS_URL=redis://redis:6379  # Redis connection string
    depends_on:
      - rabbitmq
      - mongo
      - redis  # Ensure Redis starts before consumers

  mongo:
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db  # Persist MongoDB data

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data  # Persist Redis data
    command: ["redis-server", "--appendonly", "yes"]

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    command:
      - --config.file=/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - loki
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
    volumes:
      - grafana_data:/var/lib/grafana

  loki:
    image: grafana/loki
    container_name: loki
    ports:
      - "3100:3100"

volumes:
  mongo_data:
    driver: local
  grafana_data:
    driver: local
  redis_data:
    driver: local
